{"version":3,"file":"static/webpack/static/development/pages/signup.js.338321898326efdf82df.hot-update.js","sources":["webpack:///./components/Auth/Signup.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from '../styles/Form';\nimport { FormButton } from '../styles/button/Button';\nimport Error from '../Utils/ErrorMessage';\nimport { CURRENT_USER_QUERY } from '../User/User';\nimport Header from '../Header/Header';\n\n\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!) {\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signup extends Component {\n    state = {\n        name: '',\n        password: '',\n        email: '',\n    };\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n\n  render() {\n    return (\n      <>\n      <Header />\n      <Mutation \n        mutation={SIGNUP_MUTATION} \n        variables={this.state}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n        >\n        {(signup, { error, loading }) => (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault();\n              await signup();\n              this.setState({ name: '', email: '', password: '' });\n            }}\n          >\n            <h2>Sign Up</h2>\n            <fieldset disabled={loading} aria-busy={loading}>\n              <Error error={error} />\n              <label htmlFor=\"email\">\n                Email\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label htmlFor=\"name\">\n                Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <label htmlFor=\"password\">\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <FormButton>Sign Up</FormButton>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n      </>\n    )\n  }\n}\n\nexport default Signup\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AASA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAkDA;;;;AAvEA;AACA;AAyEA;;;;A","sourceRoot":""}