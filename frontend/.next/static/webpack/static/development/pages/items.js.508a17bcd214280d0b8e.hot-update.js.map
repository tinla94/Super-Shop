{"version":3,"file":"static/webpack/static/development/pages/items.js.508a17bcd214280d0b8e.hot-update.js","sources":["webpack:///./components/Item/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\n\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nexport class DeleteItem extends Component {\n    // update ui after item is deleted\n    update = (cache, payload) => {\n        // manually update the cache on the client, so it matches the server\n        // 1. Read the cache for the items we want\n        const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n        // 2. Filter the deleted itemout of the page\n        data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n        // 3. Put the items back!\n        cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n      };\n\n  render() {\n    return (\n        <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <span\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this item?')) {\n                deleteItem().catch(err => {\n                  alert(err.message);\n                });\n              }\n            }}\n          >\n            {this.props.children}\n          </span>\n        )}\n      </Mutation>\n    )\n  }\n}\n\nexport default DeleteItem\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AAQA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAXA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAeA;AAlCA;AACA;AADA;AAAA;AAqCA;;;;A","sourceRoot":""}