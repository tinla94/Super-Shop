{"version":3,"file":"static/webpack/static/development/pages/sell.js.2cf247b22a8f0d83a792.hot-update.js","sources":["webpack:///./components/Item/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport Banner from '../Banner/Banner';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from '../styles/form/Form';\nimport { FormButton } from '../styles/button/Button';\nimport Error from '../Utils/ErrorMessage';\nimport { ALL_ITEMS_QUERY } from './Items';\n\n\nconst CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n    }\n  }\n`;  \n\n\nclass CreateItem extends Component {\n  state = {\n    title: '',\n    description: '',\n    image: '',\n    largeImage: '',\n    price: 0,\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseFloat(value) : value;\n    this.setState({ [name]: val });\n  };\n\n  // image uploading\n  uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'sgsaa53v');\n\n    const res = await fetch('https://api.cloudinary.com/v1_1/tinla94/image/upload', {\n      method: 'POST',\n      body: data,\n    });\n    const file = await res.json();\n    this.setState({\n      image: file.secure_url,\n      largeImage: file.eager[0].secure_url,\n    });\n  };\n\n  render() {\n    return (\n      <>\n      <Header />\n      <Banner \n        text='\"Never underestimate the power of a shoe.\"'\n      />\n      <Mutation \n        mutation={CREATE_ITEM_MUTATION} \n        variables={this.state}>\n        {(createItem, { loading, error }) => (\n          <Form\n            data-test=\"form\"\n            onSubmit={async e => {\n              // Stop the form from submitting\n              e.preventDefault();\n              // call the mutation\n              const res = await createItem();\n              // change them to the single item page\n              console.log(res);\n              Router.push({\n                pathname: '/item',\n                query: { id: res.data.createItem.id },\n              });\n            }}\n          >\n            <h2>Sell Your Item</h2>\n            <Error error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"file\">\n                Image\n                <input\n                  type=\"file\"\n                  id=\"file\"\n                  name=\"file\"\n                  placeholder=\"Upload an image\"\n                  required\n                  onChange={this.uploadFile}\n                />\n                {this.state.image && (\n                  <img width=\"200\" src={this.state.image} alt=\"Upload Preview\" />\n                )}\n              </label>\n\n              <label htmlFor=\"title\">\n                Title\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  required\n                  value={this.state.title}\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <label htmlFor=\"price\">\n                Price\n                <input\n                  type=\"number\"\n                  id=\"price\"\n                  name=\"price\"\n                  placeholder=\"Price\"\n                  required\n                  value={this.state.price}\n                  onChange={this.handleChange}\n                />\n              </label>\n\n              <label htmlFor=\"description\">\n                Description\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"Enter A Description\"\n                  required\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <FormButton type=\"submit\">Submit</FormButton>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n      </>\n    );\n  }\n}\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAgBA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAevEA;AA8EA;;;;AAzHA;AACA;AA2HA;;;;;A","sourceRoot":""}