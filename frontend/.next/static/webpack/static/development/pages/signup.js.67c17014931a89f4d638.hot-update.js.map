{"version":3,"file":"static/webpack/static/development/pages/signup.js.67c17014931a89f4d638.hot-update.js","sources":["webpack:///./components/Auth/Signin.js","webpack:///./components/styles/button/Button.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from '../styles/Form';\nimport { FormButton } from '../styles/button/Button';\nimport Error from '../Utils/ErrorMessage';\nimport { CURRENT_USER_QUERY } from '../User/User';\nimport Header from '../Header/Header';\n\n\n\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signin extends Component {\n  state = {\n    name: '',\n    password: '',\n    email: '',\n  };\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <>\n      <Header />\n      <div className=\"form-page\">\n        <Mutation\n          mutation={SIGNIN_MUTATION}\n          variables={this.state}\n          refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n        >\n          {(signup, { error, loading }) => (\n            <Form\n              method=\"post\"\n              onSubmit={async e => {\n                e.preventDefault();\n                await signup();\n                this.setState({ name: '', email: '', password: '' });\n              }}\n            >\n              <h2>Sign In</h2>\n              <fieldset disabled={loading} aria-busy={loading}>\n                <Error error={error} />\n                <label htmlFor=\"email\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={this.state.email}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <label htmlFor=\"password\">\n                  Password\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    value={this.state.password}\n                    onChange={this.saveToState}\n                  />\n                </label>\n                <p>\n                  Forgot Your Password?  \n                  <Link href=\"/resetpassword\">\n                    <a style={{ marginLeft: '.4rem'}}>\n                      Click Here\n                    </a>\n                  </Link>\n                </p>\n                <button type=\"submit\" className=\"button button-form\">Sign In</button>\n              </fieldset>\n            </Form>\n          )}\n        </Mutation>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Signin;","import styled from 'styled-components';\n\n\nconst FormButton = styled.button`\n    padding: 1.5rem 2.5rem;\n    margin: 2rem 0 1rem 0;\n    font-size: 1.5rem;\n    letter-spacing: .3rem;\n    color: white;\n    box-shadow: 1px 4px 4px rgba(0, 0, 0, 0.4);\n    cursor: pointer;\n    transition: all .3s;\n    background-image: linear-gradient(to right, #493382 0%, #5052b5 50%, #493382 100%);\n\n    &:hover {\n        transform: translateY(-2px) scale(1.1);\n    }\n\n    &:active,\n    &:focus {\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.4);\n    }\n`;\n\nconst MainButton = styled.button`\n    padding: 1.5rem 2.5rem;\n    margin: 2rem 0 1rem 0;\n    font-size: 1.5rem;\n    letter-spacing: .3rem;\n    color: white;\n    box-shadow: 1px 4px 4px rgba(0, 0, 0, 0.4);\n    cursor: pointer;\n    transition: all .3s;\n    background-color: ${props => props.theme.mainColor};\n\n    &:hover {\n        transform: translateY(-2px) scale(1.1);\n    }\n\n    &:active,\n    &:focus {\n        box-shadow: 1px 2px 4px rgba(0, 0, 0, 0.4);\n        border: none;\n    }\n`;\n\nexport { FormButton, MainButton };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AASA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAgDA;;;;AAnEA;AACA;AAqEA;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AASA;AAAA;;;;;A","sourceRoot":""}