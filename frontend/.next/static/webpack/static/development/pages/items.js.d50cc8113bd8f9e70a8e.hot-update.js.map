{"version":3,"file":"static/webpack/static/development/pages/items.js.d50cc8113bd8f9e70a8e.hot-update.js","sources":["webpack:///./components/Item/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport Banner from '../Banner/Banner';\nimport Item from './Item';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Pagination from '../Utils/Pagination';\nimport {perPage} from '../../config';\n\n\nconst ALL_ITEMS_QUERY = gql`\n  query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage}) {\n    items(first: $first, skip: $skip, orderBy: createdAt_ASC) {\n      id\n      title\n      price\n      description\n      image\n      largeImage\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n`;\n\nexport class Items extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Banner \n          text=\"Hello\"\n        />\n        <Center>\n            <Pagination page={this.props.page}/>\n            <Query \n              query={ALL_ITEMS_QUERY}\n              fetchPolicy=\"network-only\"\n              variables={{\n                skip: this.props.page * perPage - perPage\n              }}\n              >\n              {({ data, error, loading }) => {\n                  if (loading) return <p>Loading...</p>;\n                  if (error) return <p>Error: {error.message}</p>;\n                  return (\n                  <ItemsList>{data.items.map(item => <Item item={item} key={item.id} />)}</ItemsList>\n                  );\n              }}\n            </Query>\n            <Pagination page={this.props.page}/>\n        </Center>\n      </>\n    )\n  }\n}\n\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AA7BA;AACA;AADA;AAAA;AAiCA;;;;;A","sourceRoot":""}